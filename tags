!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALIGN	include/linux/linkage.h	47;"	d
ALIGN_STR	include/linux/linkage.h	48;"	d
ARM_F_BIT	arch/arm/include/arm.h	19;"	d
ARM_I_BIT	arch/arm/include/arm.h	18;"	d
ARM_MODE_ABT	arch/arm/include/arm.h	11;"	d
ARM_MODE_FIQ	arch/arm/include/arm.h	8;"	d
ARM_MODE_IRQ	arch/arm/include/arm.h	9;"	d
ARM_MODE_SVC	arch/arm/include/arm.h	10;"	d
ARM_MODE_SYS	arch/arm/include/arm.h	13;"	d
ARM_MODE_UND	arch/arm/include/arm.h	12;"	d
ARM_MODE_USR	arch/arm/include/arm.h	7;"	d
AS	scripts/Makefile.x86	/^AS = gcc$/;"	d
ASM_NL	include/linux/linkage.h	16;"	d
BCM2835_NUM_ARM_SPECIFIC_IRQS	arch/arm/rpi/interrupt.h	27;"	d
BCM2835_NUM_GPU_SHARED_IRQS	arch/arm/rpi/interrupt.h	23;"	d
BCM2835_NUM_IRQS	arch/arm/rpi/interrupt.h	30;"	d
CC	scripts/Makefile.x86	/^CC = gcc$/;"	d
CFLAGS	scripts/Makefile.x86	/^CFLAGS = -I arch\/x86 -Wall -m32 -g -fvar-tracking -DCONFIG_X86_SIMULATOR -I kernel\/include -I apps$/;"	d
CHECK_AND_FIX_BUFFER_OVERFLOW	kernel/logger.c	30;"	d	file:
CONFIG_1024_BYTES_BLOCK	apps/defines.h	73;"	d
CONFIG_128_BYTES_BLOCK	apps/defines.h	70;"	d
CONFIG_16_BYTES_BLOCK	apps/defines.h	67;"	d
CONFIG_2048_BYTES_BLOCK	apps/defines.h	74;"	d
CONFIG_256_BYTES_BLOCK	apps/defines.h	71;"	d
CONFIG_32_BYTES_BLOCK	apps/defines.h	68;"	d
CONFIG_4096_BYTES_BLOCK	apps/defines.h	75;"	d
CONFIG_4_BYTES_BLOCK	apps/defines.h	65;"	d
CONFIG_512_BYTES_BLOCK	apps/defines.h	72;"	d
CONFIG_64_BYTES_BLOCK	apps/defines.h	69;"	d
CONFIG_8_BYTES_BLOCK	apps/defines.h	66;"	d
CONFIG_BYTEPOOL	apps/defines.h	63;"	d
CONFIG_BYTEPOOL_SIZE	apps/defines.h	64;"	d
CONFIG_EVENTS	apps/defines.h	48;"	d
CONFIG_EVENT_COUNT	apps/defines.h	49;"	d
CONFIG_HZ	apps/defines.h	33;"	d
CONFIG_IRQS	apps/defines.h	58;"	d
CONFIG_IRQ_COUNT	apps/defines.h	59;"	d
CONFIG_KERNEL_PREEMPT	apps/defines.h	34;"	d
CONFIG_MAX_TASK	apps/defines.h	55;"	d
CONFIG_MUTEX	apps/defines.h	42;"	d
CONFIG_MUTEX_COUNT	apps/defines.h	43;"	d
CONFIG_PRINT_BUFFER	apps/defines.h	27;"	d
CONFIG_PRINT_BUFFER_SIZE	apps/defines.h	29;"	d
CONFIG_PRIO_INHERITANCE	apps/defines.h	35;"	d
CONFIG_QUEUE	apps/defines.h	45;"	d
CONFIG_QUEUE_COUNT	apps/defines.h	46;"	d
CONFIG_SEMAPHORE	apps/defines.h	39;"	d
CONFIG_SEMAPHORE_COUNT	apps/defines.h	40;"	d
CONFIG_SHIRQ_COUNT	apps/defines.h	60;"	d
CONFIG_STACK_ALLOC_DYNAMIC	apps/defines.h	23;"	d
CONFIG_SYSTEM_STACK_SIZE	apps/defines.h	24;"	d
CONFIG_TIMERS	apps/defines.h	51;"	d
CONFIG_TIMER_COUNT	apps/defines.h	52;"	d
CONFIG_TIMER_DEFAULT_STACK_SIZE	apps/defines.h	53;"	d
CONFIG_TIME_SLICE	apps/defines.h	56;"	d
CPP_ASMLINKAGE	include/linux/linkage.h	20;"	d
CPP_ASMLINKAGE	include/linux/linkage.h	22;"	d
DELAY	testapps/timeslice.c	42;"	d	file:
DWC_REGS_BASE	arch/arm/rpi/bcm2835.h	42;"	d
DeBruijnBitPosition	kernel/bytepool.c	/^const int DeBruijnBitPosition[32] = {$/;"	v
Disable_Basic_IRQs	arch/arm/rpi/dispatch.c	/^    uint Disable_Basic_IRQs;$/;"	m	struct:bcm2835_interrupt_registers	file:
Disable_IRQs_1	arch/arm/rpi/dispatch.c	/^    uint Disable_IRQs_1;$/;"	m	struct:bcm2835_interrupt_registers	file:
Disable_IRQs_2	arch/arm/rpi/dispatch.c	/^    uint Disable_IRQs_2;$/;"	m	struct:bcm2835_interrupt_registers	file:
EMPTY	kernel/include/type.h	41;"	d
END	include/linux/linkage.h	63;"	d
ENDPROC	include/linux/linkage.h	68;"	d
ENTRY	include/linux/linkage.h	54;"	d
EVENT_POOL	kernel/include/mempool.h	/^	EVENT_POOL,$/;"	e	enum:POOL_TYPE
E_OS_ASSERT_FAIL	kernel/include/type.h	/^	E_OS_ASSERT_FAIL = -5,$/;"	e	enum:__anon2
E_OS_BUSY	kernel/include/type.h	/^	E_OS_BUSY = -3,$/;"	e	enum:__anon2
E_OS_ERR_NO_MEMORY	kernel/include/type.h	/^	E_OS_ERR_NO_MEMORY = -6,$/;"	e	enum:__anon2
E_OS_ERR_OVERFLOW	kernel/include/type.h	/^	E_OS_ERR_OVERFLOW = -7,$/;"	e	enum:__anon2
E_OS_ERR_UNKNOWN	kernel/include/type.h	/^	E_OS_ERR_UNKNOWN,$/;"	e	enum:__anon2
E_OS_TIMEOUT	kernel/include/type.h	/^	E_OS_TIMEOUT = -2,$/;"	e	enum:__anon2
E_OS_UNAVAIL	kernel/include/type.h	/^	E_OS_UNAVAIL = -4,$/;"	e	enum:__anon2
Enable_Basic_IRQs	arch/arm/rpi/dispatch.c	/^    uint Enable_Basic_IRQs;$/;"	m	struct:bcm2835_interrupt_registers	file:
Enable_IRQs_1	arch/arm/rpi/dispatch.c	/^    uint Enable_IRQs_1;$/;"	m	struct:bcm2835_interrupt_registers	file:
Enable_IRQs_2	arch/arm/rpi/dispatch.c	/^    uint Enable_IRQs_2;$/;"	m	struct:bcm2835_interrupt_registers	file:
FALSE	kernel/include/type.h	39;"	d
FIQ_control	arch/arm/rpi/dispatch.c	/^    uint FIQ_control;$/;"	m	struct:bcm2835_interrupt_registers	file:
HIGH_PRIO	kernel/include/task.h	57;"	d
INTERRUPT_REGS_BASE	arch/arm/rpi/bcm2835.h	27;"	d
IRQF_SHARED	kernel/include/irq.h	30;"	d
IRQF_TRIGGER_EDGED	kernel/include/irq.h	21;"	d
IRQF_TRIGGER_FALLING	kernel/include/irq.h	25;"	d
IRQF_TRIGGER_HIGH	kernel/include/irq.h	27;"	d
IRQF_TRIGGER_LEVEL	kernel/include/irq.h	22;"	d
IRQF_TRIGGER_LOW	kernel/include/irq.h	28;"	d
IRQF_TRIGGER_RISING	kernel/include/irq.h	24;"	d
IRQ_HANDLED	kernel/include/irq.h	32;"	d
IRQ_PCM	arch/arm/rpi/bcm2835.h	65;"	d
IRQ_PL011	arch/arm/rpi/bcm2835.h	68;"	d
IRQ_SD	arch/arm/rpi/bcm2835.h	71;"	d
IRQ_SYSTEM_TIMER_0	arch/arm/rpi/bcm2835.h	52;"	d
IRQ_SYSTEM_TIMER_1	arch/arm/rpi/bcm2835.h	53;"	d
IRQ_SYSTEM_TIMER_2	arch/arm/rpi/bcm2835.h	54;"	d
IRQ_SYSTEM_TIMER_3	arch/arm/rpi/bcm2835.h	55;"	d
IRQ_TIMER	arch/arm/rpi/bcm2835.h	59;"	d
IRQ_USB	arch/arm/rpi/bcm2835.h	62;"	d
IRQ_basic_pending	arch/arm/rpi/dispatch.c	/^    uint IRQ_basic_pending;$/;"	m	struct:bcm2835_interrupt_registers	file:
IRQ_pending_1	arch/arm/rpi/dispatch.c	/^    uint IRQ_pending_1;$/;"	m	struct:bcm2835_interrupt_registers	file:
IRQ_pending_2	arch/arm/rpi/dispatch.c	/^    uint IRQ_pending_2;$/;"	m	struct:bcm2835_interrupt_registers	file:
LD	scripts/Makefile.x86	/^LD = gcc$/;"	d
LDFLAGS	scripts/Makefile.x86	/^LDFLAGS += -m32$/;"	l
LEAST_PRIO	kernel/include/task.h	56;"	d
LEAST_PRIO	testapps/suspend_resume.c	22;"	d	file:
LENTRY	include/linux/linkage.h	50;"	d
Lbignum	arch/arm/lib/_udivsi3.S	/^Lbignum:$/;"	l
Ldiv0	arch/arm/lib/_divsi3.S	/^Ldiv0:$/;"	l
Ldiv0	arch/arm/lib/_udivsi3.S	/^Ldiv0:$/;"	l
Lgot_result	arch/arm/lib/_udivsi3.S	/^Lgot_result:$/;"	l
Loop1	arch/arm/lib/_udivsi3.S	/^Loop1:$/;"	l
Loop3	arch/arm/lib/_udivsi3.S	/^Loop3:$/;"	l
MAILBOX_REGS_BASE	arch/arm/rpi/bcm2835.h	30;"	d
MAX_BLOCK_FROM_POOL	kernel/bytepool.c	40;"	d	file:
MAX_BLOCK_SIZE	kernel/bytepool.c	39;"	d	file:
MKDIR_P	scripts/Makefile.x86	/^MKDIR_P = mkdir -p$/;"	d
MOVE_BUFFER_POINTER	kernel/logger.c	23;"	d	file:
MUTEX_POOL	kernel/include/mempool.h	/^        MUTEX_POOL,$/;"	e	enum:POOL_TYPE
MYSELF	kernel/include/task.h	85;"	d
MY_MUTEX	testapps/mutex_main.c	/^struct mutex MY_MUTEX;$/;"	v	typeref:struct:mutex
MY_MUTEX	testapps/mutex_prio_inherit.c	/^struct mutex MY_MUTEX;$/;"	v	typeref:struct:mutex
MY_MUTEX	testapps/mutex_timeout.c	/^struct mutex MY_MUTEX;$/;"	v	typeref:struct:mutex
MY_PRIV	testapps/mutex_main.c	/^struct priv MY_PRIV = {10};$/;"	v	typeref:struct:priv
MY_PRIV	testapps/mutex_prio_inherit.c	/^struct priv MY_PRIV = {10};$/;"	v	typeref:struct:priv
MY_PRIV	testapps/mutex_timeout.c	/^struct priv MY_PRIV = {10};$/;"	v	typeref:struct:priv
NO_WAIT_LOCK	kernel/include/mutex.h	37;"	d
NULL	kernel/include/type.h	56;"	d
NULL	kernel/include/type.h	58;"	d
NULL	kernel/include/type.h	60;"	d
OBJDIR	scripts/Makefile.x86	/^OBJDIR = out$/;"	d
OBJECTS_AS	scripts/Makefile.x86	/^OBJECTS_AS = $(patsubst %,$(OBJDIR)\/%,$(OBJS_AS))$/;"	d
OBJECTS_GCC	scripts/Makefile.x86	/^OBJECTS_GCC = $(patsubst %,$(OBJDIR)\/%,$(OBJS_GCC))$/;"	d
OBJS_AS	scripts/Makefile.x86	/^OBJS_AS = arch\/x86\/preempt.o$/;"	d
OBJS_GCC	scripts/Makefile.x86	/^OBJS_GCC = apps\/main.o \\$/;"	d
OS_ERR	kernel/include/type.h	/^	OS_ERR = -1,$/;"	e	enum:__anon2
OS_ERR_TYPE	kernel/include/type.h	/^}OS_ERR_TYPE;$/;"	t	typeref:enum:__anon2
OS_NO_WAIT	kernel/include/type.h	22;"	d
OS_OK	kernel/include/type.h	/^	OS_OK = 0,$/;"	e	enum:__anon2
OS_WAIT_FOREVER	kernel/include/type.h	23;"	d
OUTDIR	scripts/Makefile.x86	/^OUTDIR = out\/apps out\/kernel out\/arch\/x86$/;"	d
PERIPHERALS_BASE	arch/arm/rpi/bcm2835.h	21;"	d
PL011_REGS_BASE	arch/arm/rpi/bcm2835.h	36;"	d
PM_REGS_BASE	arch/arm/rpi/bcm2835.h	33;"	d
POOL_TYPE	kernel/include/mempool.h	/^enum POOL_TYPE {$/;"	g
POWER_SD	arch/arm/rpi/bcm2835.h	/^    POWER_SD     = 0,$/;"	e	enum:board_power_feature
POWER_UART_0	arch/arm/rpi/bcm2835.h	/^    POWER_UART_0 = 1,$/;"	e	enum:board_power_feature
POWER_UART_1	arch/arm/rpi/bcm2835.h	/^    POWER_UART_1 = 2,$/;"	e	enum:board_power_feature
POWER_USB	arch/arm/rpi/bcm2835.h	/^    POWER_USB    = 3,$/;"	e	enum:board_power_feature
PRINT_DEBUG	apps/defines.h	80;"	d
PRINT_ERROR	apps/defines.h	81;"	d
PRINT_INFO	apps/defines.h	79;"	d
QUEUE_EMPTY	kernel/include/queue.h	25;"	d
QUEUE_FULL	kernel/include/queue.h	24;"	d
QUEUE_POOL	kernel/include/mempool.h	/^        QUEUE_POOL,$/;"	e	enum:POOL_TYPE
Q_BLOCK	kernel/include/queue.h	31;"	d
Q_CYCLIC_FULL	kernel/include/queue.h	28;"	d
Q_NAME_SIZE	kernel/include/queue.h	21;"	d
Q_NO_BLOCK	kernel/include/queue.h	32;"	d
Q_PRIO	kernel/include/queue.h	34;"	d
Q_PRIO_NONE	kernel/include/queue.h	35;"	d
Q_STOP_FULL	kernel/include/queue.h	29;"	d
SDHCI_REGS_BASE	arch/arm/rpi/bcm2835.h	39;"	d
SEMAPHORE_POOL	kernel/include/mempool.h	/^        SEMAPHORE_POOL,$/;"	e	enum:POOL_TYPE
SHIRQ_POOL	kernel/include/mempool.h	/^	SHIRQ_POOL,$/;"	e	enum:POOL_TYPE
SYMBOL_NAME	include/linux/linkage.h	30;"	d
SYMBOL_NAME_LABEL	include/linux/linkage.h	32;"	d
SYMBOL_NAME_LABEL	include/linux/linkage.h	34;"	d
SYMBOL_NAME_STR	include/linux/linkage.h	29;"	d
SYSTEM_TIMER_REGS_BASE	arch/arm/rpi/bcm2835.h	24;"	d
TASK_ABORT	kernel/include/task.h	/^        TASK_ABORT,$/;"	e	enum:__anon1
TASK_COMPLETE	kernel/include/task.h	/^        TASK_COMPLETE,$/;"	e	enum:__anon1
TASK_READY	kernel/include/task.h	/^        TASK_READY,$/;"	e	enum:__anon1
TASK_RUNNING	kernel/include/task.h	/^        TASK_RUNNING,$/;"	e	enum:__anon1
TASK_STATE	kernel/include/task.h	/^}TASK_STATE;$/;"	v	typeref:enum:__anon1
TASK_STR_LEN	kernel/include/task.h	20;"	d
TASK_SUSPEND	kernel/include/task.h	/^        TASK_SUSPEND,$/;"	e	enum:__anon1
TCB	kernel/include/task.h	/^typedef struct __task_control_block TCB;$/;"	t	typeref:struct:__task_control_block
TIMER0_INT	arch/arm/irq_mapping.h	21;"	d
TIMER0_INT	arch/x86/irq_mapping.h	21;"	d
TIMER_EVENT_IRQ_EVENT	kernel/include/timer.h	22;"	d
TIMER_POOL	kernel/include/mempool.h	/^        TIMER_POOL,$/;"	e	enum:POOL_TYPE
TRUE	kernel/include/type.h	38;"	d
USED	kernel/include/type.h	40;"	d
WAIT_LOCK	kernel/include/mutex.h	36;"	d
WEAK	include/linux/linkage.h	58;"	d
_ARM_H_	arch/arm/include/arm.h	2;"	d
_ASMLANGUAGE	arch/arm/osport.h	24;"	d
_ASMLANGUAGE	arch/arm/rpi/preempt.S	/^#define _ASMLANGUAGE$/;"	d
_ASMLANGUAGE	arch/x86/osport.h	22;"	d
_ASMLANGUAGE	arch/x86/preempt.S	/^#define _ASMLANGUAGE$/;"	d
_ASMLANGUAGE	arch/x86/switch.h	25;"	d
_BCM2835_H_	arch/arm/rpi/bcm2835.h	12;"	d
_C	lib/include/ctype.h	12;"	d
_D	lib/include/ctype.h	11;"	d
_INTERRUPT_H_	arch/arm/rpi/interrupt.h	9;"	d
_INTERRUPT_H_	arch/x86/interrupt.h	2;"	d
_L	lib/include/ctype.h	10;"	d
_LINUX_CTYPE_H	lib/include/ctype.h	2;"	d
_LINUX_LINKAGE_H	include/linux/linkage.h	10;"	d
_LINUX_STRING_H_	lib/include/string.h	2;"	d
_MUTEX_LOCK	kernel/include/mutex.h	/^}_MUTEX_LOCK;$/;"	v	typeref:enum:__anon3
_P	lib/include/ctype.h	13;"	d
_S	lib/include/ctype.h	14;"	d
_SIZE_T	kernel/include/type.h	47;"	d
_SP	lib/include/ctype.h	16;"	d
_SSIZE_T	kernel/include/type.h	52;"	d
_U	lib/include/ctype.h	9;"	d
_X	lib/include/ctype.h	15;"	d
__ALIGN	arch/arm/include/asm/linkage.h	4;"	d
__ALIGN	include/linux/linkage.h	38;"	d
__ALIGN_STR	arch/arm/include/asm/linkage.h	5;"	d
__ALIGN_STR	include/linux/linkage.h	42;"	d
__ASM_LINKAGE_H	arch/arm/include/asm/linkage.h	2;"	d
__BYTEPOOL_H__	kernel/include/bytepool.h	19;"	d
__CONFIG_IRQS	arch/arm/rpi/interrupt.h	20;"	d
__CONFIG_IRQS	arch/x86/interrupt.h	12;"	d
__CONFIG_IRQ_COUNT	arch/arm/rpi/interrupt.h	31;"	d
__CONFIG_IRQ_COUNT	arch/x86/interrupt.h	13;"	d
__DEFINES_H__	apps/defines.h	19;"	d
__EVENTS_H__	kernel/include/events.h	19;"	d
__INIT_H__	kernel/include/init.h	19;"	d
__IRQ	arch/arm/osport.h	49;"	d
__IRQ	arch/x86/x86_sim.h	39;"	d
__IRQ_H__	kernel/include/irq.h	19;"	d
__IRQ_MAPPING_H__	arch/arm/irq_mapping.h	19;"	d
__IRQ_MAPPING_H__	arch/x86/irq_mapping.h	19;"	d
__LOCKED	kernel/include/mutex.h	/^__LOCKED,$/;"	e	enum:__anon3
__LOGGER_H__	kernel/include/logger.h	19;"	d
__MEMPOOL_H__	kernel/include/mempool.h	19;"	d
__MUTEX_H__	kernel/include/mutex.h	19;"	d
__OSPORT_H__	arch/arm/osport.h	20;"	d
__QUEUE_H__	kernel/include/queue.h	19;"	d
__ROSE_RTOS_H__	kernel/include/RoseRTOS.h	19;"	d
__SCHED_H__	kernel/include/sched.h	19;"	d
__SEMAPHORE_H__	kernel/include/semaphore.h	19;"	d
__TASK_H__	kernel/include/task.h	19;"	d
__TIMER_DISABLED	kernel/include/timer.h	45;"	d
__TIMER_ENABLED	kernel/include/timer.h	44;"	d
__TIMER_H__	kernel/include/timer.h	19;"	d
__TYPE_H__	kernel/include/type.h	19;"	d
__UNLOCKED	kernel/include/mutex.h	/^__UNLOCKED$/;"	e	enum:__anon3
__USER	arch/arm/osport.h	50;"	d
__USER	arch/x86/x86_sim.h	40;"	d
__X86_SIM_H__	arch/x86/x86_sim.h	19;"	d
___strtok	lib/string.c	/^char * ___strtok;$/;"	v
__add_timer	kernel/timer.c	/^int __add_timer(struct timer_list *p, void (*func)(void *), int delay, TCB *tid)$/;"	f
__aeabi_idiv	arch/arm/lib/_divsi3.S	/^__aeabi_idiv:$/;"	l
__aeabi_idivmod	arch/arm/lib/_udivsi3.S	/^__aeabi_idivmod:$/;"	l
__aeabi_uidiv	arch/arm/lib/_udivsi3.S	/^ __aeabi_uidiv:$/;"	l
__aeabi_uidivmod	arch/arm/lib/_udivsi3.S	/^__aeabi_uidivmod:$/;"	l
__alloc_pool	kernel/mempool.c	/^void * __alloc_pool(int type)$/;"	f
__allocate_block	kernel/bytepool.c	/^void * __allocate_block(int pos)$/;"	f
__bytepool_start	kernel/include/bytepool.h	/^unsigned char *__bytepool_start; \/* Address must be 32 bit aligned *\/$/;"	v
__context	arch/arm/osport.h	/^volatile int __context; \/* user:0\/IRQ:1 to be used by the port critical section code to bypass if already in IRQ context *\/$/;"	v
__context	arch/x86/x86_sim.h	/^volatile int __context; \/* user:0\/IRQ:1 to be used by the port critical section code to bypass if already in IRQ context *\/$/;"	v
__critical	arch/arm/osport.h	/^volatile int __critical;$/;"	v
__critical	arch/x86/x86_sim.h	/^volatile int __critical;$/;"	v
__curr_num_task	kernel/include/task.h	/^int __curr_num_task;$/;"	v
__curr_running_task	kernel/include/task.h	/^TCB *__curr_running_task;$/;"	v
__curr_stack_ptr	kernel/include/task.h	/^void * __curr_stack_ptr;$/;"	v
__disable_irq	arch/arm/rpi/dispatch.c	/^void __disable_irq(irqmask irq_num)$/;"	f
__disable_irq	arch/x86/osport.c	/^void __disable_irq(unsigned int num)$/;"	f
__disable_irq_global	arch/arm/rpi/intutils.S	/^__disable_irq_global:$/;"	l
__disable_irq_global	arch/x86/osport.c	/^unsigned int __disable_irq_global(void)$/;"	f
__div0	arch/arm/lib/div0.c	/^void __div0 (void)$/;"	f
__divsi3	arch/arm/lib/_divsi3.S	/^__divsi3:$/;"	l
__enable_irq	arch/arm/rpi/dispatch.c	/^void __enable_irq(irqmask irq_num)$/;"	f
__enable_irq	arch/x86/osport.c	/^void __enable_irq(unsigned int num)$/;"	f
__enable_irq_global	arch/arm/rpi/intutils.S	/^__enable_irq_global:$/;"	l
__event_group_bits	kernel/mempool.c	/^static unsigned int __event_group_bits = ~0;$/;"	v	file:
__event_group_pool	kernel/mempool.c	/^static struct event_group __event_group_pool[CONFIG_EVENT_COUNT - 1];$/;"	v	typeref:struct:event_group	file:
__free_pool	kernel/mempool.c	/^void __free_pool(void *ptr, int type)$/;"	f
__init_task	kernel/include/task.h	/^TCB __init_task;$/;"	v
__init_tcb__	arch/arm/osport.h	32;"	d
__init_tcb__	arch/x86/osport.h	24;"	d
__irq_handler	kernel/irq.c	/^void __irq_handler(int irq_num)$/;"	f
__irq_pool	kernel/irq.c	/^struct irq __irq_pool[CONFIG_IRQ_COUNT - 1];$/;"	v	typeref:struct:irq
__ismask	lib/include/ctype.h	20;"	d
__kernel_enter	kernel/init.c	/^void __kernel_enter()$/;"	f
__kernel_size_t	kernel/include/type.h	/^typedef unsigned int            __kernel_size_t;$/;"	t
__kernel_ssize_t	kernel/include/type.h	/^typedef int                     __kernel_ssize_t;$/;"	t
__mutex_bits	kernel/mempool.c	/^static unsigned int __mutex_bits = ~0;$/;"	v	file:
__mutex_handler	kernel/mutex.c	/^void __mutex_handler(void *ptr)$/;"	f
__mutex_pool	kernel/mempool.c	/^static struct mutex __mutex_pool[CONFIG_MUTEX_COUNT - 1];$/;"	v	typeref:struct:mutex	file:
__mutex_timeout	kernel/mutex.c	/^static int __mutex_timeout(struct mutex *p, unsigned int timeout)$/;"	f	file:
__need_resched	kernel/include/sched.h	/^volatile int __need_resched;$/;"	v
__preempt__	arch/arm/osport.h	36;"	d
__preempt__	arch/x86/osport.h	44;"	d
__preempt_task	arch/arm/rpi/preempt.S	/^__preempt_task:$/;"	l
__preempt_task	arch/x86/preempt.S	/^__preempt_task:$/;"	l
__printk	arch/arm/osport.h	44;"	d
__printk	arch/x86/x86_sim.h	27;"	d
__printk_buffer_head	kernel/include/logger.h	/^char *__printk_buffer_head;$/;"	v
__printk_buffer_start_ptr	kernel/include/logger.h	/^char *__printk_buffer_start_ptr;$/;"	v
__printk_buffer_tail	kernel/include/logger.h	/^char *__printk_buffer_tail;$/;"	v
__printk_to_buffer	kernel/logger.c	/^void __printk_to_buffer(const char *fmt, ...)$/;"	f
__queue_bits	kernel/mempool.c	/^static unsigned int __queue_bits = ~0;$/;"	v	file:
__queue_pool	kernel/mempool.c	/^static struct queue __queue_pool[CONFIG_QUEUE_COUNT - 1];$/;"	v	typeref:struct:queue	file:
__raw_irq_counter	kernel/include/irq.h	/^volatile unsigned int __raw_irq_counter; \/* global irq counter *\/$/;"	v
__restore_irq_global	arch/arm/rpi/intutils.S	/^__restore_irq_global:$/;"	l
__restore_irq_global	arch/x86/osport.c	/^void __restore_irq_global(unsigned int key)$/;"	f
__round_off	kernel/bytepool.c	/^int __round_off(int size)$/;"	f
__sched__	arch/arm/osport.h	28;"	d
__sched__	arch/x86/switch.h	29;"	d
__sem_handler	kernel/semaphore.c	/^void __sem_handler(void *ptr)$/;"	f
__sem_timeout	kernel/semaphore.c	/^static int __sem_timeout(struct semaphore *p, unsigned int timeout)$/;"	f	file:
__semaphore_bits	kernel/mempool.c	/^static unsigned int __semaphore_bits = ~0;$/;"	v	file:
__semaphore_pool	kernel/mempool.c	/^static struct semaphore __semaphore_pool[CONFIG_SEMAPHORE_COUNT - 1];$/;"	v	typeref:struct:semaphore	file:
__shirq_bits	kernel/mempool.c	/^static unsigned int __shirq_bits = ~0;$/;"	v	file:
__shirq_pool	kernel/mempool.c	/^static struct irq __shirq_pool[CONFIG_SHIRQ_COUNT - 1];$/;"	v	typeref:struct:irq	file:
__stack_start_ptr	kernel/include/task.h	/^void * __stack_start_ptr;$/;"	v
__switch_to	kernel/sched.c	/^void __switch_to()$/;"	f
__task_control_block	kernel/include/task.h	/^struct __task_control_block$/;"	s
__task_list_head	kernel/include/task.h	/^TCB *__task_list_head;$/;"	v
__timer_bits	kernel/mempool.c	/^static unsigned int __timer_bits = ~0;$/;"	v	file:
__timer_pool	kernel/mempool.c	/^static struct timer_list __timer_pool[CONFIG_TIMER_COUNT - 1];$/;"	v	typeref:struct:timer_list	file:
__tolower	lib/include/ctype.h	/^static inline unsigned char __tolower(unsigned char c)$/;"	f
__total_mempool_used	kernel/bytepool.c	/^static unsigned int __total_mempool_used;$/;"	v	file:
__toupper	lib/include/ctype.h	/^static inline unsigned char __toupper(unsigned char c)$/;"	f
__udivsi3	arch/arm/lib/_udivsi3.S	/^ __udivsi3:$/;"	l
__x86_PORT_H__	arch/x86/osport.h	19;"	d
__x86_SWITCH_H__	arch/x86/switch.h	21;"	d
_ctype	lib/ctype.c	/^const unsigned char _ctype[] = {$/;"	v
_endvectors	arch/arm/rpi/start.S	/^_endvectors:$/;"	l
_loop	arch/arm/rpi/halt.S	/^_loop:$/;"	l
_start	arch/arm/rpi/start.S	/^_start:$/;"	l
_vectors	arch/arm/rpi/start.S	/^_vectors:$/;"	l
abort_addr	arch/arm/rpi/start.S	/^abort_addr:     .word reset_handler$/;"	l
abort_task	kernel/task.c	/^int abort_task(TCB *tcb)$/;"	f
act	arch/x86/x86_sim.h	/^struct sigaction act;$/;"	v	typeref:struct:sigaction
active_timer_head	kernel/include/timer.h	/^struct timer_list *active_timer_head;$/;"	v	typeref:struct:timer_list
add_to_active_timer_list	kernel/timer.c	/^void add_to_active_timer_list(struct timer_list *p)$/;"	f
add_to_ready_q	kernel/task.c	/^int add_to_ready_q(TCB * new)$/;"	f
all	scripts/Makefile.x86	/^all: directories rosex86$/;"	l
application_init	apps/main.c	/^void application_init(void)$/;"	f
application_init	testapps/mutex_main.c	/^void application_init(void)$/;"	f
application_init	testapps/mutex_prio_inherit.c	/^void application_init(void)$/;"	f
application_init	testapps/mutex_timeout.c	/^void application_init(void)$/;"	f
application_init	testapps/suspend_resume.c	/^void application_init(void)$/;"	f
application_init	testapps/timer.c	/^void application_init(void)$/;"	f
application_init	testapps/timeslice.c	/^void application_init(void)$/;"	f
arm_enabled_irqs	arch/arm/rpi/dispatch.c	/^static uint arm_enabled_irqs[3];$/;"	v	file:
asmlinkage	include/linux/linkage.h	26;"	d
bcm2835_interrupt_registers	arch/arm/rpi/dispatch.c	/^struct bcm2835_interrupt_registers {$/;"	s	file:
bcopy	lib/string.c	/^char * bcopy(const char * src, char * dest, int count)$/;"	f
bit_ctrl	kernel/bytepool.c	/^	unsigned int bit_ctrl; \/* Each bit corresponds to one block 1: available 0: used *\/$/;"	m	struct:pool_table	file:
board_power_feature	arch/arm/rpi/bcm2835.h	/^enum board_power_feature {$/;"	g
board_setpower	arch/arm/rpi/bcm2835.h	88;"	d
bp	kernel/include/task.h	/^        void *bp;                \/* Stack frame pointer *\/$/;"	m	struct:__task_control_block
bssloopa	arch/arm/rpi/start.S	/^bssloopa:$/;"	l
bssloopb	arch/arm/rpi/start.S	/^bssloopb:$/;"	l
bytepool_init	kernel/bytepool.c	/^void bytepool_init()$/;"	f
check_irq_pending	arch/arm/rpi/dispatch.c	/^static void check_irq_pending(uchar irq_num)$/;"	f	file:
clean	scripts/Makefile.x86	/^clean:$/;"	l
clear_event_flag	kernel/event.c	/^int clear_event_flag(unsigned int flag)$/;"	f
complete_task	kernel/task.c	/^int complete_task(TCB *tcb)$/;"	f
create_event_group	kernel/event.c	/^struct event_group * create_event_group()$/;"	f
create_mutex	kernel/mutex.c	/^struct mutex * create_mutex()$/;"	f
create_queue	kernel/queue.c	/^struct queue * create_queue(char *name, int size_of_block, int num_of_blocks, unsigned int flag)$/;"	f
create_semaphore	kernel/semaphore.c	/^struct semaphore * create_semaphore(int val)$/;"	f
create_task	kernel/task.c	/^int create_task(TCB *tcb, char *task_name, int prio, void *stack_ptr, int stack_size, void (*func)(void), int task_state, int time_slice)$/;"	f
create_timer	kernel/timer.c	/^struct timer_list *  create_timer(void (*timer_handler)(void *), void *priv, unsigned int ticks)$/;"	f
curbit	arch/arm/lib/_udivsi3.S	/^curbit		.req	r3$/;"	l
curr_stack_ptr	kernel/include/task.h	/^        void *curr_stack_ptr;    \/* Current stack pointer for the task *\/$/;"	m	struct:__task_control_block
curr_val	kernel/include/semaphore.h	/^    int curr_val;$/;"	m	struct:semaphore
delay	kernel/include/timer.h	/^	unsigned int delay; \/* actual delay *\/$/;"	m	struct:timer_list
delete_event_group	kernel/event.c	/^void delete_event_group(struct event_group *p)$/;"	f
delete_mutex	kernel/mutex.c	/^void delete_mutex(struct mutex *p)$/;"	f
delete_queue	kernel/queue.c	/^void delete_queue(struct queue *queue)$/;"	f
delete_semaphore	kernel/semaphore.c	/^void delete_semaphore(struct semaphore *p)$/;"	f
delete_task	kernel/task.c	/^int delete_task(TCB *tcb)$/;"	f
delete_timer	kernel/timer.c	/^void delete_timer(struct timer_list *timer)$/;"	f
dev_id	kernel/include/irq.h	/^        void *dev_id;$/;"	m	struct:irq
devname	kernel/include/irq.h	/^        char devname[8];$/;"	m	struct:irq
directories	scripts/Makefile.x86	/^directories: $(OUTDIR)$/;"	l
disable_irq	kernel/include/irq.h	47;"	d
dispatch	arch/arm/rpi/dispatch.c	/^void dispatch(void)$/;"	f
dividend	arch/arm/lib/_udivsi3.S	/^dividend	.req	r0$/;"	l
divisor	arch/arm/lib/_udivsi3.S	/^divisor		.req	r1$/;"	l
dmb	arch/arm/rpi/memory_barrier.S	/^dmb:$/;"	l
enable_irq	kernel/include/irq.h	46;"	d
enter_critical	arch/arm/osport.c	/^unsigned int enter_critical (void)$/;"	f
enter_critical	kernel/include/irq.h	48;"	d
event	kernel/event.c	/^struct event {$/;"	s	file:
event	kernel/include/task.h	/^	struct event_group *event; \/* Pointer to task event group *\/$/;"	m	struct:__task_control_block	typeref:struct:__task_control_block::event_group
event0_tcb	kernel/init.c	/^static TCB event0_tcb;$/;"	v	file:
event_flag	kernel/include/task.h	/^        unsigned int event_flag; \/* Task event flag *\/$/;"	m	struct:__task_control_block
event_group	kernel/include/events.h	/^struct event_group{$/;"	s
event_recv	kernel/include/task.h	/^        unsigned int event_recv; \/* Task received events *\/$/;"	m	struct:__task_control_block
event_recv_q	kernel/event.c	/^static struct queue *event_recv_q = NULL; \/* queue to hold the events received *\/$/;"	v	typeref:struct:queue	file:
exit_critical	arch/arm/osport.c	/^void exit_critical (unsigned int key)$/;"	f
exit_critical	kernel/include/irq.h	49;"	d
export	scripts/Makefile.x86	/^export CONFIG_X86_SIMULATOR$/;"	l
fiq_addr	arch/arm/rpi/start.S	/^fiq_addr:       .word reset_handler$/;"	l
first_set_bit	arch/arm/rpi/dispatch.c	/^static inline ulong first_set_bit(ulong word)$/;"	f	file:
flag	kernel/event.c	/^    unsigned int flag;$/;"	m	struct:event	file:
flag	kernel/include/queue.h	/^        unsigned int flag;$/;"	m	struct:queue
flag	kernel/include/timer.h	/^	int flag;$/;"	m	struct:timer_list
flags	kernel/include/irq.h	/^        int flags;$/;"	m	struct:irq
free_irq	kernel/irq.c	/^int free_irq(int irq_num, void *dev_id)$/;"	f
func	kernel/include/task.h	/^        void (*func)(void);      \/* Pointer to task handler *\/$/;"	m	struct:__task_control_block
g_timer_pool_used	kernel/include/timer.h	/^int g_timer_pool_used;$/;"	v
get_time_ms	kernel/timer.c	/^unsigned int get_time_ms(void)$/;"	f
halt	arch/arm/rpi/halt.S	/^halt:$/;"	l
handler	kernel/include/timer.h	/^        void (* handler)(void *);$/;"	m	struct:timer_list
head	kernel/include/queue.h	/^        char *head;$/;"	m	struct:queue
here	arch/arm/lib/crt0.S	/^here:$/;"	l
idle_task	apps/main.c	/^void idle_task(void)$/;"	f
idle_task	testapps/mutex_main.c	/^void idle_task(void)$/;"	f
idle_task	testapps/mutex_prio_inherit.c	/^void idle_task(void)$/;"	f
idle_task	testapps/mutex_timeout.c	/^void idle_task(void)$/;"	f
idle_task	testapps/suspend_resume.c	/^void idle_task(void)$/;"	f
idle_task	testapps/timer.c	/^void idle_task(void)$/;"	f
idle_task	testapps/timeslice.c	/^void idle_task(void)$/;"	f
idle_tcb	apps/main.c	/^static TCB idle_tcb;$/;"	v	file:
idle_tcb	testapps/mutex_main.c	/^static TCB idle_tcb;$/;"	v	file:
idle_tcb	testapps/mutex_prio_inherit.c	/^static TCB idle_tcb;$/;"	v	file:
idle_tcb	testapps/mutex_timeout.c	/^static TCB idle_tcb;$/;"	v	file:
idle_tcb	testapps/suspend_resume.c	/^static TCB idle_tcb;$/;"	v	file:
idle_tcb	testapps/timer.c	/^static TCB idle_tcb;$/;"	v	file:
idle_tcb	testapps/timeslice.c	/^static TCB idle_tcb;$/;"	v	file:
init_event_group	kernel/event.c	/^void init_event_group(struct event_group *event)$/;"	f
init_mutex	kernel/mutex.c	/^void init_mutex(struct mutex *mutex)$/;"	f
init_semaphore	kernel/semaphore.c	/^void init_semaphore(struct semaphore *sem, int val)$/;"	f
init_signals	arch/x86/x86_sim.c	/^void init_signals()$/;"	f
init_timer	kernel/timer.c	/^int init_timer(struct timer_list *timer, void (*timer_handler)(void *), void *priv, unsigned int ticks)$/;"	f
init_val	kernel/include/semaphore.h	/^    int init_val;$/;"	m	struct:semaphore
ip	kernel/include/task.h	/^        void *ip;                \/* Current instruction pointer\/program counter *\/$/;"	m	struct:__task_control_block
irq	kernel/include/irq.h	/^struct irq{$/;"	s
irq_addr	arch/arm/rpi/start.S	/^irq_addr:       .word irq_handler$/;"	l
irq_handler	arch/arm/rpi/irq_handler.S	/^irq_handler:$/;"	l
irq_handler	kernel/include/irq.h	/^        int (*irq_handler)(int irq, void *dev_id);$/;"	m	struct:irq
isalnum	lib/include/ctype.h	22;"	d
isalpha	lib/include/ctype.h	23;"	d
isascii	lib/include/ctype.h	40;"	d
isblank	lib/include/ctype.h	38;"	d
iscntrl	lib/include/ctype.h	24;"	d
isdigit	lib/include/ctype.h	25;"	d
isgraph	lib/include/ctype.h	26;"	d
islower	lib/include/ctype.h	27;"	d
isprint	lib/include/ctype.h	28;"	d
ispunct	lib/include/ctype.h	29;"	d
isspace	lib/include/ctype.h	30;"	d
isupper	lib/include/ctype.h	31;"	d
isxdigit	lib/include/ctype.h	32;"	d
jiffies	kernel/include/timer.h	/^volatile unsigned int jiffies;$/;"	v
list	kernel/include/task.h	/^	struct __task_control_block *list; \/* used to add in the global list of task *\/$/;"	m	struct:__task_control_block	typeref:struct:__task_control_block::__task_control_block
lock	kernel/include/mutex.h	/^        int lock;$/;"	m	struct:mutex
main	arch/x86/x86_sim.c	/^int main()$/;"	f
main	testapps/send_signal.c	/^void  main(void)$/;"	f
mask	arch/x86/x86_sim.h	/^sigset_t mask;$/;"	v
max_used_blocks	kernel/bytepool.c	/^	int max_used_blocks; \/* for memory profiling *\/$/;"	m	struct:pool_table	file:
mdelay	kernel/timer.c	/^void mdelay()$/;"	f
mem_key	arch/x86/x86_sim.c	/^key_t mem_key;$/;"	v
memchr	lib/string.c	/^void *memchr(const void *s, int c, size_t n)$/;"	f
memcmp	lib/string.c	/^int memcmp(const void * cs,const void * ct,size_t count)$/;"	f
memcpy	lib/string.c	/^void * memcpy(void *dest, const void *src, size_t count)$/;"	f
memmove	lib/string.c	/^void * memmove(void * dest,const void *src,size_t count)$/;"	f
memscan	lib/string.c	/^void * memscan(void * addr, int c, size_t size)$/;"	f
memset	lib/string.c	/^void * memset(void * s,int c,size_t count)$/;"	f
mod_timer	kernel/timer.c	/^void mod_timer(struct timer_list *p, unsigned int delay)$/;"	f
msecs_to_ticks	kernel/timer.c	/^unsigned int msecs_to_ticks(unsigned int time)$/;"	f
msleep	kernel/timer.c	/^int msleep(unsigned int time)$/;"	f
mutex	kernel/include/mutex.h	/^struct mutex{$/;"	s
mutex	kernel/include/task.h	/^	struct mutex *mutex;     \/* Pointer task mutex *\/$/;"	m	struct:__task_control_block	typeref:struct:__task_control_block::mutex
mutex_lock	kernel/mutex.c	/^int mutex_lock(struct mutex *p, unsigned int timeout)$/;"	f
mutex_unlock	kernel/mutex.c	/^int mutex_unlock(struct mutex *p)$/;"	f
name	kernel/include/queue.h	/^        char name[Q_NAME_SIZE];$/;"	m	struct:queue
name	kernel/include/task.h	/^        char name[TASK_STR_LEN]; \/* Task name *\/$/;"	m	struct:__task_control_block
ndelay	kernel/timer.c	/^void ndelay()$/;"	f
next	kernel/include/events.h	/^        struct event_group *next;$/;"	m	struct:event_group	typeref:struct:event_group::event_group
next	kernel/include/irq.h	/^        struct irq *next; \/* for shared irq *\/$/;"	m	struct:irq	typeref:struct:irq::irq
next	kernel/include/mutex.h	/^	struct mutex *next;$/;"	m	struct:mutex	typeref:struct:mutex::mutex
next	kernel/include/semaphore.h	/^    struct semaphore *next;$/;"	m	struct:semaphore	typeref:struct:semaphore::semaphore
next	kernel/include/task.h	/^	struct __task_control_block *next; \/* pointer to the next task kcontrol block *\/$/;"	m	struct:__task_control_block	typeref:struct:__task_control_block::__task_control_block
next	kernel/include/timer.h	/^        struct timer_list *next;$/;"	m	struct:timer_list	typeref:struct:timer_list::timer_list
notify_event	kernel/event.c	/^void notify_event(struct event_group *eg, unsigned int flag)$/;"	f
num	arch/x86/x86_sim.c	/^	int num;$/;"	m	struct:shm_struct	file:
num	testapps/mutex_main.c	/^       int num;$/;"	m	struct:priv	file:
num	testapps/mutex_prio_inherit.c	/^       int num;$/;"	m	struct:priv	file:
num	testapps/mutex_timeout.c	/^       int num;$/;"	m	struct:priv	file:
num	testapps/send_signal.c	/^	int num;$/;"	m	struct:shm_struct	file:
num_of_blocks	kernel/bytepool.c	/^	int num_of_blocks;$/;"	m	struct:pool_table	file:
num_of_blocks	kernel/include/queue.h	/^        int num_of_blocks;$/;"	m	struct:queue
num_of_bytes	kernel/bytepool.c	/^	int num_of_bytes;$/;"	m	struct:pool_table	file:
obj-y	kernel/Makefile	/^obj-y = task.o init.o sched.o irq.o $/;"	m
orig_mask	arch/x86/x86_sim.h	/^sigset_t orig_mask;$/;"	v
orig_prio	kernel/include/task.h	/^	int orig_prio;           \/* Priority during task creation *\/$/;"	m	struct:__task_control_block
owner	kernel/include/mutex.h	/^	TCB *owner; \/* task which currently owns the mutex lock *\/$/;"	m	struct:mutex
p	kernel/event.c	/^    void *p;$/;"	m	struct:event	file:
pid	arch/x86/x86_sim.c	/^	pid_t pid;$/;"	m	struct:shm_struct	file:
pid	arch/x86/x86_sim.c	/^pid_t pid;$/;"	v
pid	testapps/send_signal.c	/^        pid_t pid;$/;"	m	struct:shm_struct	file:
pool_mem	kernel/bytepool.c	/^static struct pool_table pool_mem[] =  {  $/;"	v	typeref:struct:pool_table	file:
pool_size	kernel/bytepool.c	/^	int pool_size;$/;"	m	struct:pool_table	file:
pool_start_ptr	kernel/bytepool.c	/^	unsigned char *pool_start_ptr;$/;"	m	struct:pool_table	file:
pool_table	kernel/bytepool.c	/^struct pool_table {$/;"	s	file:
post_peripheral_access_mb	arch/arm/rpi/bcm2835.h	111;"	d
post_peripheral_read_mb	arch/arm/rpi/bcm2835.h	102;"	d
post_peripheral_write_mb	arch/arm/rpi/bcm2835.h	106;"	d
pr_dbg	kernel/include/RoseRTOS.h	50;"	d
pr_dbg	kernel/include/RoseRTOS.h	52;"	d
pr_dbg	kernel/include/RoseRTOS.h	75;"	d
pr_dbg	kernel/include/RoseRTOS.h	77;"	d
pr_error	kernel/include/RoseRTOS.h	56;"	d
pr_error	kernel/include/RoseRTOS.h	58;"	d
pr_error	kernel/include/RoseRTOS.h	81;"	d
pr_error	kernel/include/RoseRTOS.h	83;"	d
pr_info	kernel/include/RoseRTOS.h	44;"	d
pr_info	kernel/include/RoseRTOS.h	46;"	d
pr_info	kernel/include/RoseRTOS.h	69;"	d
pr_info	kernel/include/RoseRTOS.h	71;"	d
pr_panic	kernel/include/RoseRTOS.h	61;"	d
pr_panic	kernel/include/RoseRTOS.h	86;"	d
pre_peripheral_access_mb	arch/arm/rpi/bcm2835.h	110;"	d
pre_peripheral_read_mb	arch/arm/rpi/bcm2835.h	101;"	d
pre_peripheral_write_mb	arch/arm/rpi/bcm2835.h	105;"	d
preempt	kernel/include/task.h	/^	void *preempt;           \/* Save EIP(current instruction pointer) during preempt *\/$/;"	m	struct:__task_control_block
prefetch_addr	arch/arm/rpi/start.S	/^prefetch_addr:  .word reset_handler$/;"	l
prev	kernel/include/timer.h	/^        struct timer_list *prev;$/;"	m	struct:timer_list	typeref:struct:timer_list::timer_list
print_buffer_ready	kernel/logger.c	/^static int print_buffer_ready = 0;$/;"	v	file:
prio	kernel/include/task.h	/^        int prio;                \/* Current task priority value 0 has the hisghest priority *\/$/;"	m	struct:__task_control_block
priv	apps/main.c	/^struct priv {$/;"	s	file:
priv	kernel/include/timer.h	/^	void *priv;$/;"	m	struct:timer_list
priv	testapps/mutex_main.c	/^struct priv {$/;"	s	file:
priv	testapps/mutex_prio_inherit.c	/^struct priv {$/;"	s	file:
priv	testapps/mutex_timeout.c	/^struct priv {$/;"	s	file:
priv	testapps/timer.c	/^struct priv {$/;"	s	file:
process_event	kernel/event.c	/^static int process_event(struct event_group *head, unsigned int flag)$/;"	f	file:
queue	kernel/include/queue.h	/^struct queue {$/;"	s
read_from_queue	kernel/queue.c	/^int read_from_queue(struct queue *p, char *n, int size, int timeout)$/;"	f
regs	arch/arm/rpi/dispatch.c	/^static volatile struct bcm2835_interrupt_registers * const regs =$/;"	v	file:
remove_from_ready_q	kernel/task.c	/^int remove_from_ready_q(TCB * rmv)$/;"	f
remove_from_timer_list	kernel/timer.c	/^void remove_from_timer_list(struct timer_list *p, struct timer_list **head)$/;"	f
request_irq	kernel/irq.c	/^int request_irq(int irq_num, int (*irq_handler)(int, void*), unsigned int irq_flags, char *dev_name, void *dev_id)$/;"	f
reserved_addr	arch/arm/rpi/start.S	/^reserved_addr:  .word reset_handler$/;"	l
reset_addr	arch/arm/rpi/start.S	/^reset_addr:     .word reset_handler$/;"	l
reset_handler	arch/arm/rpi/start.S	/^reset_handler:$/;"	l
result	arch/arm/lib/_udivsi3.S	/^result		.req	r2$/;"	l
resume_task	kernel/task.c	/^int resume_task(TCB *tcb)$/;"	f
rose_event_thread	kernel/event.c	/^void rose_event_thread()$/;"	f
rose_sched	kernel/sched.c	/^void rose_sched()$/;"	f
rose_timer_thread	kernel/logger.c	/^void rose_timer_thread()$/;"	f
rose_timer_thread	kernel/timer.c	/^void rose_timer_thread()$/;"	f
rosex86	scripts/Makefile.x86	/^rosex86: $(OBJECTS_GCC) $(OBJECTS_AS)$/;"	l
salloc	kernel/bytepool.c	/^void *salloc(int size)$/;"	f
secs_to_ticks	kernel/timer.c	/^unsigned int secs_to_ticks(unsigned int secs)$/;"	f
sem	kernel/include/task.h	/^	struct semaphore *sem;   \/* Pointer to task semaphore *\/$/;"	m	struct:__task_control_block	typeref:struct:__task_control_block::semaphore
semaphore	kernel/include/semaphore.h	/^struct semaphore {$/;"	s
semaphore_post	kernel/semaphore.c	/^int semaphore_post(struct semaphore *sem)$/;"	f
semaphore_wait	kernel/semaphore.c	/^int semaphore_wait(struct semaphore *sem, int timeout)$/;"	f
set_event_flag	kernel/event.c	/^int set_event_flag(unsigned int flag)$/;"	f
set_task_prio	kernel/task.c	/^int set_task_prio(TCB *tcb, int prio)$/;"	f
sfree	kernel/bytepool.c	/^void sfree(void *ptr)$/;"	f
shm_id	arch/x86/x86_sim.c	/^int   shm_id;$/;"	v
shm_ptr	arch/x86/x86_sim.c	/^struct shm_struct *shm_ptr;$/;"	v	typeref:struct:shm_struct
shm_struct	arch/x86/x86_sim.c	/^struct shm_struct {$/;"	s	file:
shm_struct	testapps/send_signal.c	/^struct shm_struct {$/;"	s	file:
sig_handler	arch/x86/x86_sim.c	/^void sig_handler(int signum)$/;"	f
size_of_block	kernel/include/queue.h	/^        int size_of_block; \/* in bytes *\/$/;"	m	struct:queue
size_t	kernel/include/type.h	/^typedef __kernel_size_t         size_t;$/;"	t
skip_spaces	lib/string.c	/^char *skip_spaces(const char *str)$/;"	f
ssize_t	kernel/include/type.h	/^typedef __kernel_ssize_t        ssize_t;$/;"	t
ssleep	kernel/timer.c	/^int ssleep(unsigned int time)$/;"	f
stack_size	kernel/include/task.h	/^        int stack_size;          \/* Stack size for the task *\/$/;"	m	struct:__task_control_block
stack_start_ptr	kernel/include/task.h	/^        void *stack_start_ptr;   \/* Start of stack for the task *\/$/;"	m	struct:__task_control_block
start	kernel/include/queue.h	/^        char *start;$/;"	m	struct:queue
start_timer	kernel/timer.c	/^void start_timer(struct timer_list *p)$/;"	f
state	kernel/include/task.h	/^        int state;               \/* Task current state *\/$/;"	m	struct:__task_control_block
stop_timer	kernel/timer.c	/^void stop_timer(struct timer_list *p)$/;"	f
strcat	lib/string.c	/^char * strcat(char * dest, const char * src)$/;"	f
strchr	lib/string.c	/^char * strchr(const char * s, int c)$/;"	f
strcmp	lib/string.c	/^int strcmp(const char * cs,const char * ct)$/;"	f
strcpy	lib/string.c	/^char * strcpy(char * dest,const char *src)$/;"	f
strim	lib/string.c	/^char *strim(char *s)$/;"	f
strlen	lib/string.c	/^size_t strlen(const char * s)$/;"	f
strncat	lib/string.c	/^char * strncat(char *dest, const char *src, size_t count)$/;"	f
strncmp	lib/string.c	/^int strncmp(const char * cs,const char * ct,size_t count)$/;"	f
strncpy	lib/string.c	/^char * strncpy(char * dest,const char *src,size_t count)$/;"	f
strnlen	lib/string.c	/^size_t strnlen(const char * s, size_t count)$/;"	f
strpbrk	lib/string.c	/^char * strpbrk(const char * cs,const char * ct)$/;"	f
strrchr	lib/string.c	/^char * strrchr(const char * s, int c)$/;"	f
strsep	lib/string.c	/^char * strsep(char **s, const char *ct)$/;"	f
strspn	lib/string.c	/^size_t strspn(const char *s, const char *accept)$/;"	f
strstr	lib/string.c	/^char * strstr(const char * s1,const char * s2)$/;"	f
strswab	lib/string.c	/^char *strswab(const char *s)$/;"	f
strtok	lib/string.c	/^char * strtok(char * s,const char * ct)$/;"	f
suspend_task	kernel/task.c	/^int suspend_task(TCB *tcb)$/;"	f
swi_addr	arch/arm/rpi/start.S	/^swi_addr:       .word reset_handler$/;"	l
sys_irq	testapps/suspend_resume.c	/^int sys_irq;$/;"	v
system_irq	testapps/suspend_resume.c	/^int system_irq(int irq_num, void *a)$/;"	f
tail	kernel/include/queue.h	/^        char *tail;$/;"	m	struct:queue
task	kernel/include/events.h	/^        TCB *task; \/* task waiting for the event *\/$/;"	m	struct:event_group
task	kernel/include/mutex.h	/^        TCB *task; \/* list of task waiting for the mutex lock *\/$/;"	m	struct:mutex
task	kernel/include/queue.h	/^	TCB *task;$/;"	m	struct:queue
task	kernel/include/semaphore.h	/^    TCB *task; \/* task waiting on the semaphore *\/$/;"	m	struct:semaphore
task	kernel/include/timer.h	/^        TCB *task;$/;"	m	struct:timer_list
task1	testapps/suspend_resume.c	/^void task1(void)$/;"	f
task1_tcb	testapps/suspend_resume.c	/^static TCB task1_tcb;$/;"	v	file:
task2	testapps/suspend_resume.c	/^void task2(void)$/;"	f
task2_tcb	testapps/suspend_resume.c	/^static TCB task2_tcb;$/;"	v	file:
task_1	apps/main.c	/^void task_1(void)$/;"	f
task_1	testapps/mutex_main.c	/^void task_1(void)$/;"	f
task_1	testapps/mutex_prio_inherit.c	/^void task_1(void)$/;"	f
task_1	testapps/mutex_timeout.c	/^void task_1(void)$/;"	f
task_1	testapps/timer.c	/^void task_1(void)$/;"	f
task_1	testapps/timeslice.c	/^void task_1(void)$/;"	f
task_1_tcb	apps/main.c	/^static TCB task_1_tcb;$/;"	v	file:
task_1_tcb	testapps/mutex_main.c	/^static TCB task_1_tcb;$/;"	v	file:
task_1_tcb	testapps/mutex_prio_inherit.c	/^static TCB task_1_tcb;$/;"	v	file:
task_1_tcb	testapps/mutex_timeout.c	/^static TCB task_1_tcb;$/;"	v	file:
task_1_tcb	testapps/timer.c	/^static TCB task_1_tcb;$/;"	v	file:
task_1_tcb	testapps/timeslice.c	/^static TCB task_1_tcb;$/;"	v	file:
task_2	apps/main.c	/^void task_2(void)$/;"	f
task_2	testapps/mutex_main.c	/^void task_2(void)$/;"	f
task_2	testapps/mutex_prio_inherit.c	/^void task_2(void)$/;"	f
task_2	testapps/mutex_timeout.c	/^void task_2(void)$/;"	f
task_2	testapps/timer.c	/^void task_2(void)$/;"	f
task_2	testapps/timeslice.c	/^void task_2(void)$/;"	f
task_2_tcb	apps/main.c	/^static TCB task_2_tcb;$/;"	v	file:
task_2_tcb	testapps/mutex_main.c	/^static TCB task_2_tcb;$/;"	v	file:
task_2_tcb	testapps/mutex_prio_inherit.c	/^static TCB task_2_tcb;$/;"	v	file:
task_2_tcb	testapps/mutex_timeout.c	/^static TCB task_2_tcb;$/;"	v	file:
task_2_tcb	testapps/timer.c	/^static TCB task_2_tcb;$/;"	v	file:
task_2_tcb	testapps/timeslice.c	/^static TCB task_2_tcb;$/;"	v	file:
task_3	apps/main.c	/^void task_3(void)$/;"	f
task_3	testapps/mutex_main.c	/^void task_3(void)$/;"	f
task_3	testapps/mutex_prio_inherit.c	/^void task_3(void)$/;"	f
task_3	testapps/mutex_timeout.c	/^void task_3(void)$/;"	f
task_3	testapps/timer.c	/^void task_3(void)$/;"	f
task_3	testapps/timeslice.c	/^void task_3(void)$/;"	f
task_3_tcb	apps/main.c	/^static TCB task_3_tcb;$/;"	v	file:
task_3_tcb	testapps/mutex_main.c	/^static TCB task_3_tcb;$/;"	v	file:
task_3_tcb	testapps/mutex_prio_inherit.c	/^static TCB task_3_tcb;$/;"	v	file:
task_3_tcb	testapps/mutex_timeout.c	/^static TCB task_3_tcb;$/;"	v	file:
task_3_tcb	testapps/timer.c	/^static TCB task_3_tcb;$/;"	v	file:
task_3_tcb	testapps/timeslice.c	/^static TCB task_3_tcb;$/;"	v	file:
task_ready_head	kernel/include/task.h	/^TCB *task_ready_head;$/;"	v
ticks	kernel/include/task.h	/^	int ticks;               \/* Ticks when 0 task will be pre-empted in co-operative mode *\/$/;"	m	struct:__task_control_block
time_expiry	kernel/include/timer.h	/^        unsigned int time_expiry; \/* delay + jiffies *\/$/;"	m	struct:timer_list
time_slice	kernel/include/task.h	/^	int time_slice;          \/* Time slice the task supposed to run; during task inittialization time_slice = ticks *\/$/;"	m	struct:__task_control_block
timer	apps/main.c	/^        struct timer_list *timer;$/;"	m	struct:priv	typeref:struct:priv::timer_list	file:
timer	kernel/include/task.h	/^	struct timer_list *timer;\/* Pointer to task timer  *\/$/;"	m	struct:__task_control_block	typeref:struct:__task_control_block::timer_list
timer	testapps/timer.c	/^        struct timer_list *timer;$/;"	m	struct:priv	typeref:struct:priv::timer_list	file:
timer0_tcb	kernel/init.c	/^static TCB timer0_tcb;$/;"	v	file:
timer_callback	apps/main.c	/^void timer_callback(void *priv)$/;"	f
timer_callback	testapps/timer.c	/^void timer_callback(void *priv)$/;"	f
timer_events	kernel/include/timer.h	/^struct event_group timer_events;$/;"	v	typeref:struct:event_group
timer_list	kernel/include/timer.h	/^struct timer_list {$/;"	s
timer_tick_irq_handler	kernel/timer.c	/^int timer_tick_irq_handler(int irq, void *a)$/;"	f
toascii	lib/include/ctype.h	41;"	d
tolower	lib/include/ctype.h	57;"	d
toupper	lib/include/ctype.h	58;"	d
udelay	kernel/timer.c	/^void udelay()$/;"	f
undef_addr	arch/arm/rpi/start.S	/^undef_addr:     .word reset_handler$/;"	l
used_blocks	kernel/bytepool.c	/^	int used_blocks;$/;"	m	struct:pool_table	file:
wait_for_event	kernel/event.c	/^int wait_for_event(struct event_group *p, int flag)$/;"	f
write_to_queue	kernel/queue.c	/^int write_to_queue(struct queue *q, char *n, int size)$/;"	f
